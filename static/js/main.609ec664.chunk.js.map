{"version":3,"sources":["types/index.ts","store/reducer.ts","store/index.tsx","components/spinner.tsx","types/GameType.ts","types/Score.ts","types/GameState.ts","styles/theme.ts","app.tsx","index.tsx","store/actionTypes.ts"],"names":["reducer","state","action","type","actionTypes","FETCH_START","loading","error","FETCH_SUCCESS","FETCH_FAIL","payload","FETCH_PEOPLE","people","FETCH_STARSHIPS","starships","CLEAR_ERROR","SET_GAME_TYPE","gameType","START_GAME","gameState","gamePeople","gameStarships","PLAY_GAME_STARSHIPS","PLAY_GAME_PEOPLE","UPDATE_GAME_STATE","INCREMENT_SCORE","newScore","score","Score","LEFT","left","right","initialState","initialStore","dispatch","value","Store","createContext","StoreProvider","children","useReducer","Provider","Spinner","container","spacing","alignItems","justify","style","height","item","GameType","GameState","theme","createMuiTheme","palette","primary","main","Choose","React","lazy","Game","Landing","App","ThemeProvider","CssBaseline","fallback","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.609ec664.chunk.js","sourcesContent":["export * from './IState';\nexport * from './IStore';\nexport * from './IStarship';\nexport * from './IPerson';\nexport * from './IResponse';\nexport * from './IError';\n\nexport * from './GameType';\nexport * from './Score';\nexport * from './GameState';\n","import { IState, Score } from '../types';\nimport { actionTypes, ActionTypes } from './actionTypes';\n\nfunction reducer(state: IState, action: ActionTypes): IState {\n  switch (action.type) {\n    case actionTypes.FETCH_START:\n      return { ...state, loading: true, error: null };\n\n    case actionTypes.FETCH_SUCCESS:\n      return { ...state, loading: false, error: null };\n\n    case actionTypes.FETCH_FAIL:\n      return { ...state, loading: false, error: action.payload };\n\n    case actionTypes.FETCH_PEOPLE:\n      return { ...state, people: action.payload };\n\n    case actionTypes.FETCH_STARSHIPS:\n      return { ...state, starships: action.payload };\n\n    case actionTypes.CLEAR_ERROR:\n      return { ...state, error: null };\n\n    case actionTypes.SET_GAME_TYPE:\n      return { ...state, gameType: action.payload };\n\n    case actionTypes.START_GAME:\n      return { ...state, gameState: null, gamePeople: null, gameStarships: null };\n\n    case actionTypes.PLAY_GAME_STARSHIPS:\n      return { ...state, gameStarships: action.payload };\n\n    case actionTypes.PLAY_GAME_PEOPLE:\n      return { ...state, gamePeople: action.payload };\n\n    case actionTypes.UPDATE_GAME_STATE:\n      return { ...state, gameState: action.payload };\n\n    case actionTypes.INCREMENT_SCORE:\n      const newScore = { ...state.score };\n      action.payload === Score.LEFT ? newScore.left++ : newScore.right++;\n      return { ...state, score: newScore };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import React, { createContext, useReducer, ReactNode } from 'react';\n\nimport reducer from './reducer';\n\nimport { IState, IStore } from '../types';\n\nexport const initialState: IState = {\n  gameType: null,\n  loading: false,\n  error: null,\n  starships: [],\n  people: [],\n  gameState: null,\n  gameStarships: null,\n  gamePeople: null,\n  score: {\n    left: 0,\n    right: 0,\n  },\n};\n\nconst initialStore: IStore = {\n  state: initialState,\n  dispatch: (value) => {},\n};\n\nexport const Store = createContext<IStore>(initialStore);\n\ntype StoreProviderProps = {\n  children: ReactNode;\n};\n\nexport function StoreProvider({ children }: StoreProviderProps) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return <Store.Provider value={{ state, dispatch }}>{children}</Store.Provider>;\n}\n","import React from 'react';\nimport { CircularProgress, Grid } from '@material-ui/core';\n\nconst Spinner = () => (\n  <Grid container spacing={0} alignItems=\"center\" justify=\"center\" style={{ height: '100vh' }}>\n    <Grid item>\n      <CircularProgress />\n    </Grid>\n  </Grid>\n);\n\nexport default Spinner;\n","export enum GameType {\n  PEOPLE = 'PEOPLE',\n  STARSHIPS = 'STARSHIPS'\n}","export enum Score {\n  LEFT = 'LEFT',\n  RIGHT = 'RIGHT',\n}\n","export enum GameState {\n  LEFT_WON = 'LEFT_WON',\n  RIGHT_WON = 'RIGHT_WON',\n  DRAW = 'DRAW',\n  INCONCLUSIVE = 'INCONCLUSIVE',\n}\n","import { createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#ffe81f',\n    },\n  },\n});\n\nexport default theme;\n","import React, { Suspense } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ThemeProvider, CssBaseline } from '@material-ui/core';\nimport theme from './styles/theme';\n\nimport Spinner from './components/spinner';\n\nconst Choose = React.lazy(() => import('./pages/choose'));\nconst Game = React.lazy(() => import('./pages/game'));\nconst Landing = React.lazy(() => import('./pages/landing'));\n\nconst App = () => (\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <Suspense fallback={<Spinner />}>\n      <Router>\n        <Switch>\n          <Route path=\"/game\">\n            <Game />\n          </Route>\n          <Route path=\"/choose\">\n            <Choose />\n          </Route>\n          <Route path=\"/\">\n            <Landing />\n          </Route>\n        </Switch>\n      </Router>\n    </Suspense>\n  </ThemeProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app';\n\nimport { StoreProvider } from './store';\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root')\n);\n","import { IError, IStarship, IPerson, Score, GameType, GameState } from '../types';\n\nexport enum actionTypes {\n  FETCH_START = 'FETCH_START',\n  FETCH_SUCCESS = 'FETCH_SUCCESS',\n  FETCH_FAIL = 'FETCH_FAIL',\n  FETCH_STARSHIPS = 'FETCH_STARSHIPS',\n  FETCH_PEOPLE = 'FETCH_PEOPLE',\n  CLEAR_ERROR = 'CLEAR_ERROR',\n  SET_GAME_TYPE = 'SET_GAME_TYPE',\n  START_GAME = 'START_GAME',\n  PLAY_GAME_STARSHIPS = 'START_GAME_STARSHIPS',\n  PLAY_GAME_PEOPLE = 'PLAY_GAME_PEOPLE',\n  UPDATE_GAME_STATE = 'UPDATE_GAME_STATE',\n  INCREMENT_SCORE = 'INCREMENT_SCORE',\n}\n\ninterface FetchStartAction {\n  type: typeof actionTypes.FETCH_START;\n}\n\ninterface FetchSuccessAction {\n  type: typeof actionTypes.FETCH_SUCCESS;\n}\n\ninterface FetchFailAction {\n  type: typeof actionTypes.FETCH_FAIL;\n  payload: IError;\n}\n\ninterface FetchStarshipsAction {\n  type: typeof actionTypes.FETCH_STARSHIPS;\n  payload: IStarship[];\n}\n\ninterface FetchPeopleAction {\n  type: typeof actionTypes.FETCH_PEOPLE;\n  payload: IPerson[];\n}\n\ninterface ClearErrorAction {\n  type: typeof actionTypes.CLEAR_ERROR;\n}\n\ninterface SetGameTypeAction {\n  type: typeof actionTypes.SET_GAME_TYPE;\n  payload: GameType;\n}\n\ninterface StartGameAction {\n  type: typeof actionTypes.START_GAME;\n}\n\ninterface PlayGameStarshipsAction {\n  type: typeof actionTypes.PLAY_GAME_STARSHIPS;\n  payload: [IStarship, IStarship];\n}\n\ninterface PlayGamePeopleAction {\n  type: typeof actionTypes.PLAY_GAME_PEOPLE;\n  payload: [IPerson, IPerson];\n}\n\ninterface UpdateGameStateAction {\n  type: typeof actionTypes.UPDATE_GAME_STATE;\n  payload: GameState;\n}\n\ninterface IncrementScoreAction {\n  type: typeof actionTypes.INCREMENT_SCORE;\n  payload: Score;\n}\n\nexport type ActionTypes =\n  | FetchStartAction\n  | FetchSuccessAction\n  | FetchFailAction\n  | FetchPeopleAction\n  | FetchStarshipsAction\n  | ClearErrorAction\n  | StartGameAction\n  | SetGameTypeAction\n  | PlayGameStarshipsAction\n  | PlayGamePeopleAction\n  | UpdateGameStateAction\n  | IncrementScoreAction;\n"],"sourceRoot":""}